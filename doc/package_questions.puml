@startuml
namespace questions {
    class Question << (S,Aquamarine) >> {
        - String id
        - String question
        - int difficulty 
        - String[] answers 
        - int solution
        - Category category

        + GetID() int
        + GetQuestion() String
        + GetDifficulty() int
        + GetAnswers() String[]
        + GetSolution() int
        + GetCategory() Category

    }
    class QuestionDB << (S,Aquamarine) >> {
        - connection sql.Conn
        - questions Question[]

        + QuestionDB() 
        + Connect(String address) 
        + GetQuestionByID(int id) Question
        + GetQuestionsByDifficulty(int d) Question[]
        + GetQuestionsByCategory(Category c) 
        + GetAllQuestions() Question[]
        + CreateQuestion(Question q) 
        + UpdateQuestion(Question q) 
        + DeleteQuestion(int id) 

    }
    class QuestionParser << (S,Aquamarine) >> {
        - questions Question[]

        + QuestionParser() 
        + LoadFromFile(String filename) 
        + WriteQuestions(String filename) 
        + GetQuestionByID(int id) Question
        + GetQuestionsByDifficulty(int d) Question[]
        + GetQuestionsByCategory(Category c) 
        + GetAllQuestions() Question[]
        + CreateQuestion(Question q) 
        + UpdateQuestion(Question q) 
        + DeleteQuestion(int id) 

    }
    interface QuestionStore  {
        + GetAllQuestions() Question[]
        + GetQuestionByID(int id) Question
        + GetQuestionsByDifficulty(int d) Question[]
        + GetQuestionsByCategory(Category c) 
        + CreateQuestion(Question q) 
        + UpdateQuestion(Question q) 
        + DeleteQuestion(int id) 

    }
    class questions.Category << (T, #FF7700) >>  {
    }
}

"questions.QuestionStore" <|-- "questions.QuestionDB"
"questions.QuestionStore" <|-- "questions.QuestionParser"

"__builtin__.string" #.. "questions.Category"
@enduml
